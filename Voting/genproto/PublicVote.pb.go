// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: PublicVote.proto

package genproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePublicVoteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ElectionId string `protobuf:"bytes,2,opt,name=election_id,json=electionId,proto3" json:"election_id,omitempty"`
	PublicId   string `protobuf:"bytes,3,opt,name=public_id,json=publicId,proto3" json:"public_id,omitempty"`
}

func (x *CreatePublicVoteReq) Reset() {
	*x = CreatePublicVoteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PublicVote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePublicVoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePublicVoteReq) ProtoMessage() {}

func (x *CreatePublicVoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_PublicVote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePublicVoteReq.ProtoReflect.Descriptor instead.
func (*CreatePublicVoteReq) Descriptor() ([]byte, []int) {
	return file_PublicVote_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePublicVoteReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreatePublicVoteReq) GetElectionId() string {
	if x != nil {
		return x.ElectionId
	}
	return ""
}

func (x *CreatePublicVoteReq) GetPublicId() string {
	if x != nil {
		return x.PublicId
	}
	return ""
}

type PublicVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ElectionId *Election `protobuf:"bytes,2,opt,name=election_id,json=electionId,proto3" json:"election_id,omitempty"`
	PublicId   string    `protobuf:"bytes,3,opt,name=public_id,json=publicId,proto3" json:"public_id,omitempty"`
}

func (x *PublicVote) Reset() {
	*x = PublicVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PublicVote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicVote) ProtoMessage() {}

func (x *PublicVote) ProtoReflect() protoreflect.Message {
	mi := &file_PublicVote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicVote.ProtoReflect.Descriptor instead.
func (*PublicVote) Descriptor() ([]byte, []int) {
	return file_PublicVote_proto_rawDescGZIP(), []int{1}
}

func (x *PublicVote) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PublicVote) GetElectionId() *Election {
	if x != nil {
		return x.ElectionId
	}
	return nil
}

func (x *PublicVote) GetPublicId() string {
	if x != nil {
		return x.PublicId
	}
	return ""
}

type PublicVote_Void struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublicVote_Void) Reset() {
	*x = PublicVote_Void{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PublicVote_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicVote_Void) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicVote_Void) ProtoMessage() {}

func (x *PublicVote_Void) ProtoReflect() protoreflect.Message {
	mi := &file_PublicVote_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicVote_Void.ProtoReflect.Descriptor instead.
func (*PublicVote_Void) Descriptor() ([]byte, []int) {
	return file_PublicVote_proto_rawDescGZIP(), []int{2}
}

type GetPublicVoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPublicVoteRequest) Reset() {
	*x = GetPublicVoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PublicVote_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicVoteRequest) ProtoMessage() {}

func (x *GetPublicVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_PublicVote_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicVoteRequest.ProtoReflect.Descriptor instead.
func (*GetPublicVoteRequest) Descriptor() ([]byte, []int) {
	return file_PublicVote_proto_rawDescGZIP(), []int{3}
}

func (x *GetPublicVoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPublicVoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicVote []*PublicVote `protobuf:"bytes,1,rep,name=public_vote,json=publicVote,proto3" json:"public_vote,omitempty"`
}

func (x *GetPublicVoteResponse) Reset() {
	*x = GetPublicVoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PublicVote_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicVoteResponse) ProtoMessage() {}

func (x *GetPublicVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_PublicVote_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicVoteResponse.ProtoReflect.Descriptor instead.
func (*GetPublicVoteResponse) Descriptor() ([]byte, []int) {
	return file_PublicVote_proto_rawDescGZIP(), []int{4}
}

func (x *GetPublicVoteResponse) GetPublicVote() []*PublicVote {
	if x != nil {
		return x.PublicVote
	}
	return nil
}

type UpdatePublicVoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicVote *PublicVote `protobuf:"bytes,1,opt,name=public_vote,json=publicVote,proto3" json:"public_vote,omitempty"`
}

func (x *UpdatePublicVoteRequest) Reset() {
	*x = UpdatePublicVoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PublicVote_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePublicVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePublicVoteRequest) ProtoMessage() {}

func (x *UpdatePublicVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_PublicVote_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePublicVoteRequest.ProtoReflect.Descriptor instead.
func (*UpdatePublicVoteRequest) Descriptor() ([]byte, []int) {
	return file_PublicVote_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePublicVoteRequest) GetPublicVote() *PublicVote {
	if x != nil {
		return x.PublicVote
	}
	return nil
}

type DeletePublicVoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePublicVoteRequest) Reset() {
	*x = DeletePublicVoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PublicVote_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePublicVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePublicVoteRequest) ProtoMessage() {}

func (x *DeletePublicVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_PublicVote_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePublicVoteRequest.ProtoReflect.Descriptor instead.
func (*DeletePublicVoteRequest) Descriptor() ([]byte, []int) {
	return file_PublicVote_proto_rawDescGZIP(), []int{6}
}

func (x *DeletePublicVoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_PublicVote_proto protoreflect.FileDescriptor

var file_PublicVote_proto_rawDesc = []byte{
	0x0a, 0x10, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x0e, 0x45, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x63, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x22,
	0x6c, 0x0a, 0x0a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a,
	0x0b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x22, 0x11, 0x0a,
	0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x5f, 0x56, 0x6f, 0x69, 0x64,
	0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x76, 0x6f, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x22, 0x4e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x76, 0x6f, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x32, 0x8c, 0x03, 0x0a, 0x11, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x76, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x5f, 0x56, 0x6f, 0x69,
	0x64, 0x12, 0x4a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x5f, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x1d,
	0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f,
	0x74, 0x65, 0x12, 0x1c, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x56, 0x6f, 0x74, 0x65, 0x12, 0x4c, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x76, 0x6f, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x5f, 0x56, 0x6f,
	0x69, 0x64, 0x12, 0x4c, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x74, 0x65, 0x5f, 0x56, 0x6f, 0x69, 0x64,
	0x42, 0x0b, 0x5a, 0x09, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_PublicVote_proto_rawDescOnce sync.Once
	file_PublicVote_proto_rawDescData = file_PublicVote_proto_rawDesc
)

func file_PublicVote_proto_rawDescGZIP() []byte {
	file_PublicVote_proto_rawDescOnce.Do(func() {
		file_PublicVote_proto_rawDescData = protoimpl.X.CompressGZIP(file_PublicVote_proto_rawDescData)
	})
	return file_PublicVote_proto_rawDescData
}

var file_PublicVote_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_PublicVote_proto_goTypes = []interface{}{
	(*CreatePublicVoteReq)(nil),     // 0: voting.CreatePublicVoteReq
	(*PublicVote)(nil),              // 1: voting.PublicVote
	(*PublicVote_Void)(nil),         // 2: voting.PublicVote_Void
	(*GetPublicVoteRequest)(nil),    // 3: voting.GetPublicVoteRequest
	(*GetPublicVoteResponse)(nil),   // 4: voting.GetPublicVoteResponse
	(*UpdatePublicVoteRequest)(nil), // 5: voting.UpdatePublicVoteRequest
	(*DeletePublicVoteRequest)(nil), // 6: voting.DeletePublicVoteRequest
	(*Election)(nil),                // 7: voting.Election
}
var file_PublicVote_proto_depIdxs = []int32{
	7, // 0: voting.PublicVote.election_id:type_name -> voting.Election
	1, // 1: voting.GetPublicVoteResponse.public_vote:type_name -> voting.PublicVote
	1, // 2: voting.UpdatePublicVoteRequest.public_vote:type_name -> voting.PublicVote
	0, // 3: voting.PublicVoteService.CreatePublicVote:input_type -> voting.CreatePublicVoteReq
	2, // 4: voting.PublicVoteService.GetAllPublicVote:input_type -> voting.PublicVote_Void
	3, // 5: voting.PublicVoteService.GetByIdPublicVote:input_type -> voting.GetPublicVoteRequest
	5, // 6: voting.PublicVoteService.UpdatePublicVote:input_type -> voting.UpdatePublicVoteRequest
	6, // 7: voting.PublicVoteService.DeletePublicVote:input_type -> voting.DeletePublicVoteRequest
	2, // 8: voting.PublicVoteService.CreatePublicVote:output_type -> voting.PublicVote_Void
	4, // 9: voting.PublicVoteService.GetAllPublicVote:output_type -> voting.GetPublicVoteResponse
	1, // 10: voting.PublicVoteService.GetByIdPublicVote:output_type -> voting.PublicVote
	2, // 11: voting.PublicVoteService.UpdatePublicVote:output_type -> voting.PublicVote_Void
	2, // 12: voting.PublicVoteService.DeletePublicVote:output_type -> voting.PublicVote_Void
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_PublicVote_proto_init() }
func file_PublicVote_proto_init() {
	if File_PublicVote_proto != nil {
		return
	}
	file_Election_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_PublicVote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePublicVoteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PublicVote_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PublicVote_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicVote_Void); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PublicVote_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicVoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PublicVote_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicVoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PublicVote_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePublicVoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PublicVote_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePublicVoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_PublicVote_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_PublicVote_proto_goTypes,
		DependencyIndexes: file_PublicVote_proto_depIdxs,
		MessageInfos:      file_PublicVote_proto_msgTypes,
	}.Build()
	File_PublicVote_proto = out.File
	file_PublicVote_proto_rawDesc = nil
	file_PublicVote_proto_goTypes = nil
	file_PublicVote_proto_depIdxs = nil
}
